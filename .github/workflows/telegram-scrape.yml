name: Telegram Scraping

on:
  schedule:
    # Runs at 00:00 and 12:00 UTC every day
    - cron: '0 0,12 * * *'
  workflow_dispatch: # Allows manual triggering
    inputs:
      params:
        description: 'parameters to pass to the script'
        required: false
        type: string
        default: ''

jobs:
  scrape-telegram:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Install cloudflare worker dependencies
        run: bun install --cwd blissbase-telegram-entry

      - name: scrape
        env:
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TELEGRAM_APP_ID: ${{ secrets.TELEGRAM_APP_ID }}
          TELEGRAM_APP_HASH: ${{ secrets.TELEGRAM_APP_HASH }}
          TELEGRAM_APP_SESSION: ${{ secrets.TELEGRAM_APP_SESSION }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
        run: bun run scripts/telegram-scraper.ts ${{ github.event.inputs.params }}

  deduplicate:
    if: ${{ always() }}
    needs: [scrape-telegram]
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install
      - name: Remove duplicates
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
        run: bun run scripts/remove-duplicates.ts ${{ github.event.inputs.params }}
